// src/bot/bot.service.ts
import { Injectable } from '@nestjs/common';
import { Update, Start, Action, On, Ctx } from 'nestjs-telegraf';
import { Scenes, Context as BaseContext } from 'telegraf';

export type MyContext = Scenes.SceneContext & BaseContext;

@Update()
@Injectable()
export class BotService {
  @Start()
  async onStart(@Ctx() ctx: MyContext): Promise<void> {
    await ctx.scene.enter('start');
  }

  /** –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ ¬´‚≠ê –ö—É–ø–∏—Ç—å –ó–≤—ë–∑–¥—ã¬ª */
  @Action('BUY')
  async onBuy(@Ctx() ctx: MyContext): Promise<void> {
    await ctx.scene.enter('buy-wizard');
  }

  /** –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ ¬´üéÅ –ü–æ–¥–∞—Ä–æ–∫ –¥—Ä—É–≥—É¬ª */
  @Action('GIFT')
  async onGift(@Ctx() ctx: MyContext): Promise<void> {
    await ctx.scene.enter('gift-wizard');
  }

  /** –í—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äì –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ –Ω–∞—á–∞—Ç—å */
  @On('message')
  async onMessage(@Ctx() ctx: MyContext): Promise<void> {
    await ctx.reply(
      '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /start –∏–ª–∏ –∫–Ω–æ–ø–∫–∞–º–∏.',
    );
  }
}
